[{"id":94336955,"repository_id":25237,"number":"668","state":"finished","result":1,"started_at":"2015-12-02T07:03:28Z","finished_at":"2015-12-02T07:10:53Z","duration":1435,"commit":"b124825116e4e380e2f9eaa68b90b3b335b92580","branch":"1.8.x","message":"DATAJPA-829 - Support for Contains keyword on collection expressions.\n\nThe if a collection expression is concluded with a Contains keyword, we now translate that into a \"member of\"-expression on the criteria query. This allows to check whether a collection property contains a singular value.\n\nList\u003cUser\u003e findByRolesContaining(Role role);\n\nThis will return all users that have the given role.","event_type":"push"},{"id":94336623,"repository_id":25237,"number":"667","state":"finished","result":null,"started_at":"2015-12-02T07:02:43Z","finished_at":"2015-12-02T07:03:24Z","duration":20,"commit":"26a3ecf4a5b680a9312abe8f5ef290375e1ed158","branch":"1.8.x","message":"DATAJPA-829 - Support for Contains keyword on collection expressions.\n\nThe if a collection expression is concluded with a Contains keyword, we now translate that into a \"member of\"-expression on the criteria query. This allows to check whether a collection property contains a singular value.\n\nList\u003cUser\u003e findByRolesContaining(Role role);\n\nThis will return all users that have the given role.","event_type":"push"},{"id":94336604,"repository_id":25237,"number":"666","state":"finished","result":null,"started_at":"2015-12-02T07:01:58Z","finished_at":"2015-12-02T07:02:44Z","duration":24,"commit":"e2f3bba6ff5f696694a38150a9c4e62083ddfb7b","branch":"1.9.x","message":"DATAJPA-829 - Support for Contains keyword on collection expressions.\n\nThe if a collection expression is concluded with a Contains keyword, we now translate that into a \"member of\"-expression on the criteria query. This allows to check whether a collection property contains a singular value.\n\nList\u003cUser\u003e findByRolesContaining(Role role);\n\nThis will return all users that have the given role.","event_type":"push"},{"id":94336237,"repository_id":25237,"number":"665","state":"finished","result":0,"started_at":"2015-12-02T06:56:45Z","finished_at":"2015-12-02T07:06:19Z","duration":1991,"commit":"033b4bfd18de4d6ba75ba5d6c3adf8dca03f2e35","branch":"1.9.x","message":"DATAJPA-830 - NotContaining now gets applied correctly.\n\nWe now handle the NotContaining keyword correctly for String property expressions.","event_type":"push"},{"id":94336224,"repository_id":25237,"number":"664","state":"finished","result":null,"started_at":"2015-12-02T06:54:19Z","finished_at":"2015-12-02T06:56:39Z","duration":218,"commit":"4d8485a4b371daeff2a54a4a77ab80017ca82478","branch":"master","message":"DATAJPA-829 - Support for Contains keyword on collection expressions.\n\nThe if a collection expression is concluded with a Contains keyword, we now translate that into a \"member of\"-expression on the criteria query. This allows to check whether a collection property contains a singular value.\n\nList\u003cUser\u003e findByRolesContaining(Role role);\n\nThis will return all users that have the given role.","event_type":"push"},{"id":94336209,"repository_id":25237,"number":"663","state":"finished","result":0,"started_at":"2015-12-02T06:50:38Z","finished_at":"2015-12-02T06:57:38Z","duration":1626,"commit":"d228e7befc56d45e2ce767b9a9ae9661f308c8e9","branch":"1.8.x","message":"DATAJPA-830 - NotContaining now gets applied correctly.\n\nWe now handle the NotContaining keyword correctly for String property expressions.","event_type":"push"},{"id":93597202,"repository_id":25237,"number":"662","state":"finished","result":1,"started_at":"2015-11-27T22:26:02Z","finished_at":"2015-11-27T22:28:15Z","duration":384,"commit":"c59e8c97f3119d74c8698c0f34706e116b9f2671","branch":"issue/DATAJPA-804","message":"DATAJPA-804 - Support for projections on query methods.\n\nBased on the work for DATACMNS-89 we now use the metadata exposed by ResourceProcessor to optimize queries that are to be projected on the query execution level.\n\nIf a projection interface is used that's not using any dynamic expression, we now explicitly query for a JPA Tuple consisting of all properties required for the projection interface. The same applies to DTOs that use an @PersistenceConstructor.","event_type":"push"},{"id":93401187,"repository_id":25237,"number":"661","state":"finished","result":0,"started_at":"2015-11-26T17:31:22Z","finished_at":"2015-11-26T17:40:47Z","duration":2212,"commit":"a3b6ca6a2633d212b9b2768d17c341504b1c1cf3","branch":"master","message":"DATAJPA-826 - Added Jacoco to test executions explicitly.\n\nTo make sure the coverage data is collected for all test executions, we now explicitly add the Jacoco Java agent to the test executions.\n\nAdded Jacoco plugin explicitly to make sure the agent can be resolved even if the build is not run in sonarcube profile.","event_type":"push"},{"id":92021761,"repository_id":25237,"number":"660","state":"finished","result":0,"started_at":"2015-11-19T11:30:22Z","finished_at":"2015-11-19T11:39:46Z","duration":2134,"commit":"705666b492972c496a12d748a3c3ec29af2126b0","branch":"1.9.x","message":"DATAJPA-823 - After release cleanups.","event_type":"push"},{"id":91587091,"repository_id":25237,"number":"659","state":"finished","result":0,"started_at":"2015-11-17T12:42:56Z","finished_at":"2015-11-17T12:52:37Z","duration":2193,"commit":"51ff07c04c0bef0346fd232ab5ae2421c694d978","branch":"master","message":"DATAJPA-765 - Upgraded to Querydsl 4.","event_type":"push"},{"id":91421325,"repository_id":25237,"number":"658","state":"finished","result":0,"started_at":"2015-11-16T17:25:01Z","finished_at":"2015-11-16T17:47:59Z","duration":2157,"commit":"36f04fadb77de097583a827abd68bfa95d7ef234","branch":"issue/DATAJPA-765","message":"DATAJPA-765 - Upgraded to Querydsl 4.0.6.","event_type":"push"},{"id":91418409,"repository_id":25237,"number":"657","state":"finished","result":1,"started_at":"2015-11-16T17:12:54Z","finished_at":"2015-11-16T17:28:42Z","duration":1630,"commit":"081d67aa2fb8402b54acb823876c40391b219c02","branch":"issue/DATAJPA-765","message":"Querydsl 4 hacking.","event_type":"push"},{"id":91330372,"repository_id":25237,"number":"656","state":"finished","result":null,"started_at":"2015-11-16T07:38:15Z","finished_at":"2015-11-16T07:55:29Z","duration":2581,"commit":"a3662df94b969c100c8f79897acfc94a627e9d1b","branch":"master","message":"DATAJPA-823 - Updated changelog.","event_type":"push"},{"id":91330350,"repository_id":25237,"number":"655","state":"finished","result":0,"started_at":"2015-11-16T07:30:50Z","finished_at":"2015-11-16T07:40:56Z","duration":1830,"commit":"e8901a2e7a158ab5ffa2f9d2f3539bebeb8488a0","branch":"1.8.x","message":"DATAJPA-823 - Updated changelog.","event_type":"push"},{"id":91229137,"repository_id":25237,"number":"654","state":"finished","result":0,"started_at":"2015-11-15T14:57:43Z","finished_at":"2015-11-15T15:01:32Z","duration":1896,"commit":"33a6e3406487de6c8a6ec805163c3ce36710bba0","branch":"1.9.1.RELEASE","message":"DATAJPA-823 - Release version 1.8.1.RELEASE (Gosling SR1).","event_type":"push"},{"id":91229102,"repository_id":25237,"number":"653","state":"finished","result":0,"started_at":"2015-11-15T14:37:21Z","finished_at":"2015-11-15T14:47:08Z","duration":2155,"commit":"aa437317e9b722fad8b4885cd21510e7791d6f49","branch":"1.9.x","message":"DATAJPA-823 - After release cleanups.","event_type":"push"},{"id":91224209,"repository_id":25237,"number":"652","state":"finished","result":null,"started_at":"2015-11-15T13:52:04Z","finished_at":"2015-11-15T14:04:32Z","duration":2477,"commit":"33a6e3406487de6c8a6ec805163c3ce36710bba0","branch":"1.9.x","message":"DATAJPA-823 - Release version 1.8.1.RELEASE (Gosling SR1).","event_type":"push"},{"id":91224196,"repository_id":25237,"number":"651","state":"finished","result":0,"started_at":"2015-11-15T13:45:36Z","finished_at":"2015-11-15T13:54:21Z","duration":2050,"commit":"efbfdf864d9112538d55895abfa81050c91428dd","branch":"1.9.x","message":"DATAJPA-823 - Prepare next development iteration.","event_type":"push"},{"id":91223033,"repository_id":25237,"number":"650","state":"finished","result":0,"started_at":"2015-11-15T13:31:56Z","finished_at":"2015-11-15T13:46:55Z","duration":2140,"commit":"0999be1a5aebc18d4ca930cec7f577569df847ae","branch":"1.9.x","message":"DATAJPA-823 - Prepare 1.9.1.RELEASE (Gosling SR1).","event_type":"push"},{"id":90262139,"repository_id":25237,"number":"649","state":"finished","result":0,"started_at":"2015-11-10T10:07:39Z","finished_at":"2015-11-10T10:16:49Z","duration":2116,"commit":"eb16a58cf2a585355bfc38e9ce610030ccc911d0","branch":"master","message":"DATAJPA-821 - Upgraded to OpenJPA 2.4.","event_type":"push"},{"id":89618089,"repository_id":25237,"number":"648","state":"finished","result":0,"started_at":"2015-11-06T10:57:33Z","finished_at":"2015-11-06T11:09:17Z","duration":2254,"commit":"3f7fad1a6a06fe543ce00eaf0eb3ae1512f43c4c","branch":"master","message":"DATAJPA-820 - Try to discover more version properties on superclasses.\n\nTweaked the lookup of a version property on a mapped superclass. Hibernate doesn't expose itself as being very supportive in that: on versions below 4.3 the method primarily intended to look it up (IdentifiableType.getVersion(…)) expects you to hand in exactly the type of the property you're trying to find in the first place. Awesome, not.\n\nIf this fails, we now explicitly traverse the singular attributes and recursively traverse super types. Unfortunately, on the Hibernate version broken as defined above, the check for attribute.isVersion() fails even for the version property as the implementation holds all singular attributes with one for the version property which is not marked as such.\n\ntl;dr; - everyone trying to use @Version on a mapped superclass and a primitive identifier in an entity on Hibernate 4.3 will still have to implement Persistable to make sure EntityManager.persist(…) is used for new entities.","event_type":"push"},{"id":89618076,"repository_id":25237,"number":"647","state":"finished","result":0,"started_at":"2015-11-06T10:46:58Z","finished_at":"2015-11-06T11:01:24Z","duration":1969,"commit":"c3ffa47d9f7e3d74d90d99a23e48245247ce99de","branch":"1.8.x","message":"DATAJPA-820 - Try to discover more version properties on superclasses.\n\nTweaked the lookup of a version property on a mapped superclass. Hibernate doesn't expose itself as being very supportive in that: on versions below 4.3 the method primarily intended to look it up (IdentifiableType.getVersion(…)) expects you to hand in exactly the type of the property you're trying to find in the first place. Awesome, not.\n\nIf this fails, we now explicitly traverse the singular attributes and recursively traverse super types. Unfortunately, on the Hibernate version broken as defined above, the check for attribute.isVersion() fails even for the version property as the implementation holds all singular attributes with one for the version property which is not marked as such.\n\ntl;dr; - everyone trying to use @Version on a mapped superclass and a primitive identifier in an entity on Hibernate 4.3 will still have to implement Persistable to make sure EntityManager.persist(…) is used for new entities.","event_type":"push"},{"id":89618067,"repository_id":25237,"number":"646","state":"finished","result":0,"started_at":"2015-11-06T10:41:21Z","finished_at":"2015-11-06T10:51:40Z","duration":2106,"commit":"d0b12c37bbc99c1a03f6b9944872c1d6f46d10d6","branch":"1.9.x","message":"DATAJPA-820 - Try to discover more version properties on superclasses.\n\nTweaked the lookup of a version property on a mapped superclass. Hibernate doesn't expose itself as being very supportive in that: on versions below 4.3 the method primarily intended to look it up (IdentifiableType.getVersion(…)) expects you to hand in exactly the type of the property you're trying to find in the first place. Awesome, not.\n\nIf this fails, we now explicitly traverse the singular attributes and recursively traverse super types. Unfortunately, on the Hibernate version broken as defined above, the check for attribute.isVersion() fails even for the version property as the implementation holds all singular attributes with one for the version property which is not marked as such.\n\ntl;dr; - everyone trying to use @Version on a mapped superclass and a primitive identifier in an entity on Hibernate 4.3 will still have to implement Persistable to make sure EntityManager.persist(…) is used for new entities.","event_type":"push"},{"id":89495623,"repository_id":25237,"number":"645","state":"finished","result":null,"started_at":"2015-11-05T18:40:14Z","finished_at":"2015-11-05T18:53:41Z","duration":2585,"commit":"b3324a0e7da73ddff625e9f3fa5c64aefa1c73c6","branch":"master","message":"DATAJPA-871 - CrudMethodMetadataPostProcessor now uses the bean ClassLoader.\n\nThe thread-local proxy for the CrudMethodMetadata is now created using the bean ClassLoader, which the repository factory gets set from the container.\n\nRenamed the property for the post processor and its lookup method.","event_type":"push"},{"id":89495611,"repository_id":25237,"number":"644","state":"finished","result":0,"started_at":"2015-11-05T18:31:48Z","finished_at":"2015-11-05T18:41:33Z","duration":2106,"commit":"55b65322fb83022ba482f5361befce14a164fb32","branch":"1.9.x","message":"DATAJPA-871 - CrudMethodMetadataPostProcessor now uses the bean ClassLoader.\n\nThe thread-local proxy for the CrudMethodMetadata is now created using the bean ClassLoader, which the repository factory gets set from the container.\n\nRenamed the property for the post processor and its lookup method.","event_type":"push"}]