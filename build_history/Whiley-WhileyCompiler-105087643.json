[{"id":105087642,"repository_id":4509743,"number":"326","state":"finished","result":1,"started_at":"2016-01-27T05:15:08Z","finished_at":"2016-01-27T05:16:47Z","duration":99,"commit":"5ed25ba3b45fe5a39cda3d27f3adabbe2a824575","branch":"feature/574-bytecode","message":"Extends AbstractMultiNaryAssign with mulitple types #574\n\nThis extends the bytecode AbstractMultiNaryAssign to support multiple\ntarget types.  This includes updating the wire format appropriately, and\nalso for AbstractNaryAssign (since they share wire formats).","event_type":"push"},{"id":105076501,"repository_id":4509743,"number":"325","state":"finished","result":1,"started_at":"2016-01-27T03:37:53Z","finished_at":"2016-01-27T03:39:30Z","duration":97,"commit":"1e930072698071ced31e079a63fad46435278d7b","branch":"feature/574-bytecode","message":"Debugging problem reading/writing WyIL","event_type":"push"},{"id":104803850,"repository_id":4509743,"number":"324","state":"finished","result":1,"started_at":"2016-01-26T02:37:06Z","finished_at":"2016-01-26T02:38:32Z","duration":86,"commit":"eb6ef7346c984158516a53b8a0091ba7b3ac798e","branch":"feature/574-bytecode","message":"Extends AbstractMultiNaryAssign with mulitple types #574\n\nThis extends the bytecode AbstractMultiNaryAssign to support multiple\ntarget types.  This includes updating the wire format appropriately, and\nalso for AbstractNaryAssign (since they share wire formats).","event_type":"push"},{"id":104796515,"repository_id":4509743,"number":"323","state":"finished","result":0,"started_at":"2016-01-26T01:39:45Z","finished_at":"2016-01-26T01:49:49Z","duration":604,"commit":"02bdad7c5a930a81970e9a5334b8f0ffa2d6bf5b","branch":"develop","message":"Hotfix for broken test case\n\nOne test case contained a syntax error.  It's unclear when I introduced\nthis, but this hotfix corrects to ensure the build now compiles.","event_type":"push"},{"id":104795388,"repository_id":4509743,"number":"322","state":"finished","result":1,"started_at":"2016-01-26T01:43:45Z","finished_at":"2016-01-26T01:54:34Z","duration":649,"commit":"ad1f0f03d651c7fb3328e1d7bc8fec1432b3e211","branch":"develop","message":"Merge pull request #573 from richdougherty/feature/327-continue\n\nAdd support for continue statement","event_type":"push"},{"id":104794322,"repository_id":4509743,"number":"321","state":"finished","result":1,"started_at":"2016-01-26T01:19:44Z","finished_at":"2016-01-26T01:55:45Z","duration":718,"commit":"b89730b95665228e56f45519bfd818d21e1bffb2","branch":"develop","message":"Merge branch 'feature/565-returns' into develop","event_type":"push"},{"id":104755231,"repository_id":4509743,"number":"320","state":"finished","result":0,"started_at":"2016-01-25T22:00:12Z","finished_at":"2016-01-25T22:10:14Z","duration":602,"commit":"3415985fa7c81d64939926fe7f16cd38b02fafe4","branch":"develop","message":"Add support for continue statement\n\nFixes #327.","event_type":"pull_request"},{"id":104738886,"repository_id":4509743,"number":"319","state":"finished","result":0,"started_at":"2016-01-25T21:01:51Z","finished_at":"2016-01-25T21:12:25Z","duration":634,"commit":"0be9bb6e4b0eb6cdb741618c7382b530bc065b8c","branch":"develop","message":"Merge pull request #572 from richdougherty/bug/travis-build-all\n\nEnsure Travis builds all projects","event_type":"push"},{"id":104738669,"repository_id":4509743,"number":"318","state":"finished","result":0,"started_at":"2016-01-25T21:01:16Z","finished_at":"2016-01-25T21:14:17Z","duration":781,"commit":"0fb9193dfb98c077087bfb1fce5d55032a89a60c","branch":"develop","message":"Merge pull request #571 from richdougherty/misc/rich-contributor\n\nAdd contributor sign off for Rich Dougherty","event_type":"push"},{"id":104354915,"repository_id":4509743,"number":"317","state":"finished","result":1,"started_at":"2016-01-23T22:45:37Z","finished_at":"2016-01-23T22:55:59Z","duration":622,"commit":"5b1803e58ae8c023fc77cd79b1223ac61187db4a","branch":"feature/565-returns","message":"Working through failing invalid test cases","event_type":"push"},{"id":104009752,"repository_id":4509743,"number":"316","state":"finished","result":1,"started_at":"2016-01-22T03:30:15Z","finished_at":"2016-01-22T03:41:10Z","duration":655,"commit":"6d1422da2d3de9c79ec588c87dd1f53d70d89cda","branch":"feature/565-returns","message":"Multiple returns are now almost working\n\nAlthough this has come at some cost, multiple returns are now\nessentially working.  Realistically, I need to now continue refactoring\nthe WyIL bytecode and this will bring about further improvements.","event_type":"push"},{"id":104006783,"repository_id":4509743,"number":"315","state":"finished","result":0,"started_at":"2016-01-22T03:04:06Z","finished_at":"2016-01-22T03:14:11Z","duration":605,"commit":"1c245151ea0ab9bd04f03f9511bd190008152329","branch":"develop","message":"Ensure Travis builds all projects\n\nChange Travis to run Ant with both the build-all and test-all\ntargets. Currently Travis just runs the test-all target, but that\nisn't enough because it only builds the artifacts needed to run\nthe tests. Some modules will not be built at all. By including\nthe build-all target we ensure that all artifacts are built.","event_type":"pull_request"},{"id":104006139,"repository_id":4509743,"number":"314","state":"finished","result":0,"started_at":"2016-01-22T02:58:35Z","finished_at":"2016-01-22T03:08:27Z","duration":592,"commit":"e06d6a9da851c32fb1cfa5509648573f366286cc","branch":"develop","message":"Add contributor sign off for Rich Dougherty","event_type":"pull_request"},{"id":103985984,"repository_id":4509743,"number":"313","state":"finished","result":1,"started_at":"2016-01-22T00:13:58Z","finished_at":"2016-01-22T00:15:07Z","duration":69,"commit":"02a3fc73430043135282839a223f888047c0a4e8","branch":"feature/565-returns","message":"Updates.  More things are compiling now","event_type":"push"},{"id":103950299,"repository_id":4509743,"number":"312","state":"finished","result":1,"started_at":"2016-01-21T21:23:32Z","finished_at":"2016-01-21T21:24:45Z","duration":73,"commit":"10e1ce1ea83f70173d05da513307de0a8d3e9ce4","branch":"feature/565-returns","message":"Updates.  More things are compiling now","event_type":"push"},{"id":103764417,"repository_id":4509743,"number":"311","state":"finished","result":1,"started_at":"2016-01-21T04:00:39Z","finished_at":"2016-01-21T04:01:43Z","duration":64,"commit":"c61785498474acc841f8ee6e2f5602d9f43bd2ee","branch":"feature/565-returns","message":"Updating Codes.Return bytecode #565\n\nAm in the process of updating the Codes.Return bytecode.  In fact,\nrealistically, the bytecode format needs a significant overhaul in my\nopinion.","event_type":"push"},{"id":103758598,"repository_id":4509743,"number":"310","state":"finished","result":1,"started_at":"2016-01-21T03:05:34Z","finished_at":"2016-01-21T03:06:40Z","duration":66,"commit":"ff17962bbe342b150515b1b93b8ba11b6a9cd2c6","branch":"feature/565-returns","message":"Update to compile #565\n\nThis means more things compile now, after changing the meaning of the\nNaryAssignable bytecode","event_type":"push"},{"id":103746279,"repository_id":4509743,"number":"309","state":"finished","result":1,"started_at":"2016-01-21T01:15:41Z","finished_at":"2016-01-21T01:16:50Z","duration":69,"commit":"6ac499c26d44970c135d36b385d396653ba24810","branch":"feature/565-returns","message":"Update WyIL to handle true multiple returns #565\n\nIn order to handle true multiple returns, the WyIL bytecode format needs\nto be updated.  In particular, have adjusted the interface\nAbstractAssignable to permit the assignment of multiple variables.  Have\nalso added the class AbstractMultiNaryAssignable which is for bytecodes\nthat have multiple targets and multiple operands.","event_type":"push"},{"id":103745152,"repository_id":4509743,"number":"308","state":"finished","result":0,"started_at":"2016-01-21T01:07:07Z","finished_at":"2016-01-21T01:16:43Z","duration":576,"commit":"b5eb0a736efec4852ec7b35345ebac974c1420e9","branch":"develop","message":"Update to Travis Configuration\n\nTravis is currently failing on the develop branch for reasons unknown.\nThis change is an attempt to resolve this.","event_type":"push"},{"id":103741855,"repository_id":4509743,"number":"307","state":"finished","result":1,"started_at":"2016-01-21T00:47:24Z","finished_at":"2016-01-21T00:49:08Z","duration":104,"commit":"bce55c09f4a970b96a0d80d58841df14b9ce77d4","branch":"develop","message":"Merge pull request #570 from DrewStratford/develop\n\nAdded check for IndirectInvoke's of type method in checkFunctionPure.","event_type":"push"},{"id":103733846,"repository_id":4509743,"number":"306","state":"finished","result":1,"started_at":"2016-01-21T00:13:42Z","finished_at":"2016-01-21T00:15:35Z","duration":113,"commit":"9d57305c1d6a290e15341f37a05f9f5c0ab6bbac","branch":"develop","message":"Merge pull request #569 from richdougherty/feature/497-test-build\n\nAdd Ant test target, run tests in Travis","event_type":"push"},{"id":103565621,"repository_id":4509743,"number":"305","state":"finished","result":0,"started_at":"2016-01-20T09:54:30Z","finished_at":"2016-01-20T09:56:12Z","duration":102,"commit":"68458365552ac4f1d62a9a1e8b369028570dc58b","branch":"develop","message":"Added check for IndirectInvoke's of type method in checkFunctionPure.\nThis is to fix issue 567, where methods could be called within functions\nif they were passed in as arguments.","event_type":"pull_request"},{"id":103493892,"repository_id":4509743,"number":"304","state":"finished","result":1,"started_at":"2016-01-20T00:24:19Z","finished_at":"2016-01-20T00:25:58Z","duration":99,"commit":"2c0e3aea1250cd2663e5bc2cd8d42aa8fa5265d3","branch":"develop","message":"Enable tests in Travis build; disable failing tests\n\nI needed to disable the failing tests so that the Travis build would pass.","event_type":"pull_request"},{"id":103493618,"repository_id":4509743,"number":"303","state":"finished","result":1,"started_at":"2016-01-20T00:23:15Z","finished_at":"2016-01-20T00:24:50Z","duration":95,"commit":"4d0b75ffd48afcbe218e84d855d2daf1b0fbaa0a","branch":"master","message":"Enable tests in Travis build; disable failing tests\n\nI needed to disable the failing tests so that the Travis build would pass.","event_type":"pull_request"},{"id":103270270,"repository_id":4509743,"number":"302","state":"finished","result":1,"started_at":"2016-01-19T05:16:26Z","finished_at":"2016-01-19T05:17:36Z","duration":70,"commit":"c612abf01cc4aeacc3569b83cb25e2a229156b49","branch":"feature/565-returns","message":"Update WyIL to handle true multiple returns #565\n\nIn order to handle true multiple returns, the WyIL bytecode format needs\nto be updated.  In particular, have adjusted the interface\nAbstractAssignable to permit the assignment of multiple variables.  Have\nalso added the class AbstractMultiNaryAssignable which is for bytecodes\nthat have multiple targets and multiple operands.","event_type":"push"}]