[{"id":118883389,"repository_id":4509743,"number":"435","state":"finished","result":1,"started_at":"2016-03-27T23:01:42Z","finished_at":"2016-03-27T23:16:28Z","duration":886,"commit":"90c4f5b628470b45dd2bdf9762e53239f5416ddd","branch":"feature/502-bytecodes","message":"Replaecd Unary/Binary/Not/Invert bytecodes\n\nThese bytecodes are in the process of being replaced with a single\nbytecode Operator.","event_type":"push"},{"id":118801667,"repository_id":4509743,"number":"434","state":"finished","result":0,"started_at":"2016-03-27T11:04:01Z","finished_at":"2016-03-27T11:25:22Z","duration":1281,"commit":"01399249e560abf0bb7292834cd0f9ce0c6b3a3c","branch":"develop","message":"spam stdout when running test cases on travis\n\nTravis needs to be spammed with some kind of output, otherwise our build gets terminated with \"No output has been received in the last 10 minutes, this potentially indicates a stalled build or something wrong with the build itself.\"","event_type":"pull_request"},{"id":118770176,"repository_id":4509743,"number":"433","state":"finished","result":1,"started_at":"2016-03-27T04:23:58Z","finished_at":"2016-03-27T04:25:41Z","duration":103,"commit":"4069a21ad35c1191e3f8b785c9a75e0ce804b8d3","branch":"feature/502-bytecodes","message":"Replaecd Unary/Binary/Not/Invert bytecodes\n\nThese bytecodes are in the process of being replaced with a single\nbytecode Operator.","event_type":"push"},{"id":118767934,"repository_id":4509743,"number":"432","state":"finished","result":null,"started_at":"2016-03-27T03:59:28Z","finished_at":"2016-03-27T04:18:41Z","duration":1153,"commit":"fbcf0152dfc2295bd2d31e9cfa859440900d7eae","branch":"feature/502-bytecodes","message":"Remove Codes.Void and Codes.NULL_REG #502\n\nThe Codes.Void bytecode makes heaps of sense but is completely unused at\nthis stage.  For simplicity it's gone for now.\n\nThe Codes.NULL_REG and related constants are no longer required and have\nbeen removed.","event_type":"push"},{"id":118765712,"repository_id":4509743,"number":"431","state":"finished","result":null,"started_at":"2016-03-27T03:33:07Z","finished_at":"2016-03-27T03:53:51Z","duration":1244,"commit":"9a9b0702e23b181a92a8642b5fb5f935ec776806","branch":"develop","message":"Merge branch 'feature/474-blocks' into develop","event_type":"push"},{"id":118748922,"repository_id":4509743,"number":"430","state":"finished","result":null,"started_at":"2016-03-27T00:04:32Z","finished_at":"2016-03-27T00:24:05Z","duration":1173,"commit":"ee829b90a4630dbd8f9155fa7253fa9dbce1b541","branch":"develop","message":"Add test cases for #608,#609,#610\n\nThese test a range of parsing related problems, such as parsing the\nvoid type, detecting duplicate functions, methods and types.  They are\nannoying little edge cases ;)","event_type":"push"},{"id":118673288,"repository_id":4509743,"number":"429","state":"finished","result":null,"started_at":"2016-03-26T13:25:49Z","finished_at":"2016-03-26T13:46:42Z","duration":1253,"commit":"2c302e837b64e245d4751e9b138d676aadd68a07","branch":"develop","message":"closes #590","event_type":"pull_request"},{"id":118455608,"repository_id":4509743,"number":"428","state":"finished","result":0,"started_at":"2016-03-25T11:23:55Z","finished_at":"2016-03-25T11:42:48Z","duration":1133,"commit":"327debb7a1274530c4b85783fbb2421f580c51ac","branch":"develop","message":"spam stdout when running test cases on travis\n\nTravis needs to be spammed with some kind of output, otherwise our build gets terminated with \"No output has been received in the last 10 minutes, this potentially indicates a stalled build or something wrong with the build itself.\"","event_type":"pull_request"},{"id":118441399,"repository_id":4509743,"number":"427","state":"finished","result":null,"started_at":"2016-03-25T09:44:17Z","finished_at":"2016-03-25T10:04:09Z","duration":1192,"commit":"bd1b8239694f01c4c93f6a2f41fff4e5f5b0eea5","branch":"master","message":"deterministic order in error message","event_type":"pull_request"},{"id":118441176,"repository_id":4509743,"number":"426","state":"finished","result":1,"started_at":"2016-03-25T09:43:09Z","finished_at":"2016-03-25T10:01:58Z","duration":1129,"commit":"063fc7538a5c4e23063c36d05913564ea012901d","branch":"master","message":"deterministic order in error message","event_type":"pull_request"},{"id":118437139,"repository_id":4509743,"number":"425","state":"finished","result":null,"started_at":"2016-03-25T09:09:23Z","finished_at":"2016-03-25T09:29:06Z","duration":1183,"commit":"9f0e9a2fc0fee112746b4cc7a7144614704e985e","branch":"master","message":"fix parsing for address expressions, closes #604","event_type":"pull_request"},{"id":117926124,"repository_id":4509743,"number":"424","state":"finished","result":null,"started_at":"2016-03-23T09:50:01Z","finished_at":"2016-03-23T10:10:38Z","duration":1237,"commit":"25ed15f39fa8e52a702aa384847cfc435f2d8e24","branch":"feature/474-blocks","message":"WyJC: Update WyJC\n\nThis updates WyJC to now correctly compile code and pass tests.  There\nseems to have been some problem with tests that were also failing in the\nprevious release.  See #602\n\nThis also updates the RuntimeValidTests so that it now searches in the tests\ndirectory automatically to find test cases.  This means that we no\nlonger have to maintain the long list of test cases and make sure they\nare in sync, etc.","event_type":"push"},{"id":117024038,"repository_id":4509743,"number":"423","state":"finished","result":0,"started_at":"2016-03-18T22:20:16Z","finished_at":"2016-03-18T22:39:11Z","duration":1135,"commit":"540da412838cbefb9851f7a9f939a5d417584b3e","branch":"feature/474-blocks","message":"WyJC: bug fix for Codes.Update and references","event_type":"push"},{"id":117021782,"repository_id":4509743,"number":"422","state":"finished","result":0,"started_at":"2016-03-18T22:08:17Z","finished_at":"2016-03-18T22:27:07Z","duration":1130,"commit":"be4a1dc98b7e2ae9de365ef7044632459ecc0c38","branch":"feature/474-blocks","message":"WyJC: tidying up some formatting\n\nWorking on why TypeEquals_Valid_34 is failing.  It seems to be in\ntranslateInvariantTest.  This works OK in v0.3.39, but is not working\nhere.  Yet the code appears identical.  I think perhaps one of the types\ninvolved must be different somehow.","event_type":"push"},{"id":117007036,"repository_id":4509743,"number":"421","state":"finished","result":0,"started_at":"2016-03-18T20:56:06Z","finished_at":"2016-03-18T21:14:21Z","duration":1095,"commit":"bf6923b1ea5f31280bd9c5a45346909506a16cfb","branch":"feature/474-blocks","message":"WyJC: tidying up some formatting\n\nWorking on why TypeEquals_Valid_34 is failing.  It seems to be in\ntranslateInvariantTest.  This works OK in v0.3.39, but is not working\nhere.  Yet the code appears identical.  I think perhaps one of the types\ninvolved must be different somehow.","event_type":"push"},{"id":116853668,"repository_id":4509743,"number":"420","state":"finished","result":0,"started_at":"2016-03-18T09:30:29Z","finished_at":"2016-03-18T09:49:19Z","duration":1130,"commit":"995571526280b58bc727db8a169abad43ee6ac9e","branch":"feature/474-blocks","message":"WyJC: more bug fixes\n\nWorking on deciding what the problems are with type tests","event_type":"push"},{"id":116848570,"repository_id":4509743,"number":"419","state":"finished","result":0,"started_at":"2016-03-18T09:03:01Z","finished_at":"2016-03-18T09:21:54Z","duration":1133,"commit":"48f5d42184b9028fb588dc8701565a665a211fe5","branch":"feature/474-blocks","message":"WyJC: working on bug fixes","event_type":"push"},{"id":116774576,"repository_id":4509743,"number":"418","state":"finished","result":0,"started_at":"2016-03-17T22:56:29Z","finished_at":"2016-03-17T23:13:59Z","duration":1050,"commit":"462c37b61080a5016328efe9b7245a1cc83500f1","branch":"feature/474-blocks","message":"WyJC: fixing bugs prior to merge\n\nCurrently, WyJC is not generating correct bytecode.","event_type":"push"},{"id":116574051,"repository_id":4509743,"number":"417","state":"finished","result":1,"started_at":"2016-03-17T07:36:09Z","finished_at":"2016-03-17T07:38:25Z","duration":136,"commit":"5a5b810aae98712c52fd27fea07abba89cf18b04","branch":"feature/474-blocks","message":"WyIL: Update VcGenerator\n\nThis implements a rather hacky fix so that VcGenerator now compiles and\nverifies most examples.","event_type":"push"},{"id":116569611,"repository_id":4509743,"number":"416","state":"finished","result":1,"started_at":"2016-03-17T06:51:51Z","finished_at":"2016-03-17T06:54:15Z","duration":144,"commit":"4f4ed8810da519a92418583120e50a790aed300c","branch":"feature/474-blocks","message":"WyIL: Update VcGenerator\n\nThis implements a rather hacky fix so that VcGenerator now compiles and\ncompiles most examples.\n\nCurrently investigating problems with allocating variables during\nCodeGeneration.","event_type":"push"},{"id":116563954,"repository_id":4509743,"number":"415","state":"finished","result":1,"started_at":"2016-03-17T05:56:36Z","finished_at":"2016-03-17T05:58:33Z","duration":117,"commit":"23cab6d04cd5a838f5fa7c7184cb5e5daf48c245","branch":"feature/474-blocks","message":"WyIL: Update VcGenerator\n\nThis implements a rather hacky fix so that VcGenerator now compiles and\nit at least works for one example.","event_type":"push"},{"id":116562432,"repository_id":4509743,"number":"414","state":"finished","result":1,"started_at":"2016-03-17T05:39:48Z","finished_at":"2016-03-17T05:41:52Z","duration":124,"commit":"be49bf215717553b7b34582092762ca037dfc928","branch":"feature/474-blocks","message":"WyIL: Update VcGenerator\n\nThis implements a rather hacky fix so that VcGenerator now compiles and\nit at least works for one example.","event_type":"push"},{"id":116558502,"repository_id":4509743,"number":"413","state":"finished","result":1,"started_at":"2016-03-17T05:03:24Z","finished_at":"2016-03-17T05:05:05Z","duration":101,"commit":"1e2763f2b36b399bf51b452d4583d65247cbf927","branch":"feature/474-blocks","message":"WyIL: Update VcGenerator\n\nThis implements a rather hacky fix so that VcGenerator now compiles and\nit at least works for one example.","event_type":"push"},{"id":115588870,"repository_id":4509743,"number":"412","state":"finished","result":1,"started_at":"2016-03-12T22:41:21Z","finished_at":"2016-03-12T22:42:58Z","duration":97,"commit":"7373a4edbee253249e592127a3853d947b418ccf","branch":"feature/474-blocks","message":"Spliting up VcGenerator\n\nThe purpose of this is to try and isolate the really complicated code\nand to provide an easier way to look at what's going on.  It's basically\nthe starting point for the refactoring.","event_type":"push"},{"id":115476628,"repository_id":4509743,"number":"411","state":"finished","result":1,"started_at":"2016-03-12T04:07:01Z","finished_at":"2016-03-12T04:08:22Z","duration":81,"commit":"081a43013657046d8eec546e79e4736e5c4c54f5","branch":"feature/474-blocks","message":"Trying to refactor the VcGenerator a little","event_type":"push"}]