[{"id":309871148,"repository_id":6121557,"number":"1243","state":"finished","result":1,"started_at":"2017-12-01T05:27:21Z","finished_at":"2017-12-01T05:29:32Z","duration":348,"commit":"f3baca43c21cbc10b90f1edf45ef2b63bebe3ab6","branch":"2.x","message":"Use a TreeMap for default comparators by field/property to have reliable ordering when displaying used comparators.","event_type":"push"},{"id":309419182,"repository_id":6121557,"number":"1242","state":"finished","result":0,"started_at":"2017-11-30T09:37:08Z","finished_at":"2017-11-30T09:41:49Z","duration":800,"commit":"da157407bce2644d90d4d1d51705768d653c1e7b","branch":"master","message":"Refactoring ShouldContainCharSequenceOnlyOnce (#1114)\n\nExploiting method overloading.","event_type":"push"},{"id":309413580,"repository_id":6121557,"number":"1241","state":"finished","result":1,"started_at":"2017-11-30T09:24:13Z","finished_at":"2017-11-30T09:28:39Z","duration":391,"commit":"65c3487a0aa8ff83f25d4c84084c4e67a03f1922","branch":"2.x","message":"Use default DoubleComparator and FloatComparator comparing numbers with respective precision of 1e-15 and 1e-6f for element by element comparison.\nThe same strategy was already used in Object field by field comparison and in RecursiveFieldByFieldComparator.\nBetter description of used comparators in error messages.","event_type":"push"},{"id":309412517,"repository_id":6121557,"number":"1240","state":"finished","result":0,"started_at":"2017-11-30T09:21:22Z","finished_at":"2017-11-30T09:27:46Z","duration":929,"commit":"658d191a4d3830a759c00f50110136f10c69a2c7","branch":"master","message":"Fix `isEqualTo` typo. (#1124)\n\nRemove a source of confusion when reading the docs.","event_type":"push"},{"id":308879367,"repository_id":6121557,"number":"1239","state":"finished","result":0,"started_at":"2017-11-29T09:33:54Z","finished_at":"2017-11-29T09:36:43Z","duration":443,"commit":"9cecd6c1b2b98978743ddb778575f33a21b4da12","branch":"master","message":"Fix `isEqualTo` typo.\n\nRemove a source of confusion when reading the docs.","event_type":"pull_request"},{"id":307354312,"repository_id":6121557,"number":"1238","state":"finished","result":0,"started_at":"2017-11-26T03:53:23Z","finished_at":"2017-11-26T03:58:28Z","duration":840,"commit":"5dc4e3e2bcfe4a9321cc85dbb2c1c0b8cecc614f","branch":"master","message":"[mvn] Upgrade maven wrapper to 0.3.0 (#1122)","event_type":"push"},{"id":307319057,"repository_id":6121557,"number":"1237","state":"finished","result":0,"started_at":"2017-11-26T01:02:23Z","finished_at":"2017-11-26T01:19:06Z","duration":2514,"commit":"4ee5a7264e01586ddb54e62e2b5fc57006816fd8","branch":"master","message":"[mvn] Upgrade maven wrapper to 0.3.0","event_type":"pull_request"},{"id":306216955,"repository_id":6121557,"number":"1236","state":"finished","result":1,"started_at":"2017-11-23T09:09:48Z","finished_at":"2017-11-23T09:12:25Z","duration":413,"commit":"f4fd145bc598b21818ba350cc9b326c566b83996","branch":"better-real-numbers-comparators","message":"Use http://floating-point-gui.de/errors/comparison/ implementation but fail for x, y, epsilon where x=0 and y=epsilon.","event_type":"push"},{"id":305934047,"repository_id":6121557,"number":"1235","state":"finished","result":0,"started_at":"2017-11-22T17:54:40Z","finished_at":"2017-11-22T17:57:59Z","duration":483,"commit":"a2514bf953bcecdc258b62789bae05a5857f14af","branch":"master","message":"Print stack trace information for `AbstractThrowableAssert.doesNotThrowAnyException()`\n\ncloses https://github.com/joel-costigliola/assertj-core/issues/1118","event_type":"pull_request"},{"id":304409685,"repository_id":6121557,"number":"1234","state":"finished","result":0,"started_at":"2017-11-19T19:09:14Z","finished_at":"2017-11-19T19:12:44Z","duration":529,"commit":"7d0fe2e6679ef23e303d6776dff9bf5e426b242b","branch":"2.x","message":"update junit-dataprovider to version 2.0","event_type":"push"},{"id":303899361,"repository_id":6121557,"number":"1233","state":"finished","result":0,"started_at":"2017-11-18T08:54:28Z","finished_at":"2017-11-18T08:57:31Z","duration":450,"commit":"e23f664b2deb27a862ab18aed3e6a1e6022c05d2","branch":"2.x","message":"Breaking change: assertThat(x).isCloseTo(y, byLessThan(delta)) is strict and fails when |x-y|=delta","event_type":"push"},{"id":302376707,"repository_id":6121557,"number":"1232","state":"finished","result":0,"started_at":"2017-11-15T08:53:46Z","finished_at":"2017-11-15T08:56:23Z","duration":423,"commit":"dde95d8d5d815879c9506dd09e84a2e730a1a4c0","branch":"master","message":"Refactoring ShouldContainCharSequenceOnlyOnce\n\nExploiting method overloading.","event_type":"pull_request"},{"id":301718274,"repository_id":6121557,"number":"1231","state":"finished","result":0,"started_at":"2017-11-14T01:07:34Z","finished_at":"2017-11-14T01:10:21Z","duration":447,"commit":"c1289ac33db6cf3ad52a927388d30c8fca76a479","branch":"master","message":"Have AbstractInstantAssertions implement ComparableAssert\n\nUsing an older assert/j, we have a bunch of assertions that\nwork using ComparableAssertions on Instant objects.  With the\naddition of native Instant assertions, these currently fail to\ncompile.","event_type":"pull_request"},{"id":299835354,"repository_id":6121557,"number":"1230","state":"finished","result":0,"started_at":"2017-11-09T20:01:16Z","finished_at":"2017-11-09T20:04:14Z","duration":399,"commit":"bca10170fbf1cbed025349fed0bc045bd18a83e5","branch":"2.x","message":"extent #containsOnly javadoc examples","event_type":"push"},{"id":298930018,"repository_id":6121557,"number":"1229","state":"finished","result":0,"started_at":"2017-11-08T05:36:46Z","finished_at":"2017-11-08T05:40:12Z","duration":463,"commit":"6dc45f51a1ff7abf05ad59df4a236a64ae36f691","branch":"master","message":"Fixes from @joel-costigliola's code review.","event_type":"pull_request"},{"id":297841458,"repository_id":6121557,"number":"1228","state":"finished","result":0,"started_at":"2017-11-06T07:08:16Z","finished_at":"2017-11-06T07:10:54Z","duration":453,"commit":"7e0fb723335263b7c3df7151d6314615e2051bb7","branch":"master","message":"Added catchThrowableOfType() assertion to do type-safe downcast.","event_type":"pull_request"},{"id":297495626,"repository_id":6121557,"number":"1227","state":"finished","result":0,"started_at":"2017-11-05T10:01:04Z","finished_at":"2017-11-05T10:04:37Z","duration":506,"commit":"9cab0458a544300dc72e5c3533d87c4cc31b502e","branch":"2.x","message":"Improve the method doesNotContain in CharSequenceAssert for accepting varargs","event_type":"push"},{"id":297447192,"repository_id":6121557,"number":"1226","state":"finished","result":0,"started_at":"2017-11-05T05:31:51Z","finished_at":"2017-11-05T05:34:13Z","duration":380,"commit":"84906b15995920b7cc4f290a0bd9fe03db832b16","branch":"2.x","message":"1069 Update isBlank and add containsOnlyWhitespace.","event_type":"push"},{"id":295957668,"repository_id":6121557,"number":"1225","state":"finished","result":0,"started_at":"2017-11-01T21:14:08Z","finished_at":"2017-11-01T21:17:08Z","duration":457,"commit":"8ae64a29a60099f702f272a3539bb73530df4e7f","branch":"2.x","message":"1069 Fix javadoc","event_type":"pull_request"},{"id":295905356,"repository_id":6121557,"number":"1224","state":"finished","result":0,"started_at":"2017-11-01T19:16:04Z","finished_at":"2017-11-01T19:18:26Z","duration":407,"commit":"d2db5a1a8961d025e24700698ef15bc93f95435a","branch":"2.x","message":"AbstractCharacterAssert: extend javadoc examples","event_type":"push"},{"id":295787467,"repository_id":6121557,"number":"1223","state":"finished","result":0,"started_at":"2017-11-01T14:54:04Z","finished_at":"2017-11-01T14:57:03Z","duration":446,"commit":"ca41d9652e672b09dac1a85a38ef1f896ca85776","branch":"master","message":"Added isUpperCase/isLowerCase to String/CharSequence","event_type":"pull_request"},{"id":295190794,"repository_id":6121557,"number":"1222","state":"finished","result":null,"started_at":"2017-10-31T08:27:45Z","finished_at":"2017-10-31T08:27:45Z","duration":0,"commit":"8a9864a3ab29fcadc03da62df87d99bbbde82afb","branch":"2.x","message":"1069 Update isBlank and add containsOnlyWhitespace.","event_type":"pull_request"},{"id":292997258,"repository_id":6121557,"number":"1221","state":"finished","result":0,"started_at":"2017-10-26T06:21:24Z","finished_at":"2017-10-26T06:24:46Z","duration":426,"commit":"aa233cb5e0121829322ba32a933afb9b5032dd2c","branch":"2.x","message":"Improve the method doesNotContain in CharSequenceAssert for accepting varargs","event_type":"pull_request"},{"id":292704638,"repository_id":6121557,"number":"1220","state":"finished","result":0,"started_at":"2017-10-25T16:27:45Z","finished_at":"2017-10-25T16:34:39Z","duration":545,"commit":"3d461c8cdf159f85ad1c5b020f51778fb06e903e","branch":"2.x","message":"AbstractCharSequenceAssert#containsOnlyDigits: minimal improvement of javadoc","event_type":"push"},{"id":291728858,"repository_id":6121557,"number":"1219","state":"finished","result":0,"started_at":"2017-10-23T20:01:52Z","finished_at":"2017-10-23T20:05:47Z","duration":458,"commit":"e12a081ffad35d037e5d53fe552efaefb16f6665","branch":"2.x","message":" #1069 Add isStrictlyBlank and isNotStrictlyBlank","event_type":"pull_request"}]