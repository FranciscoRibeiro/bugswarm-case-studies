[{"id":68917320,"repository_id":1236949,"number":"946","state":"finished","result":null,"started_at":"2015-06-30T04:22:41Z","finished_at":"2015-06-30T04:24:19Z","duration":135,"commit":"0d91832fedc77491827fd2f31059f6c614147d91","branch":"jwilson_0630_trim","message":"Implement trimming from the root set.\n\nThis trims the in-memory model rather than limiting which types are emitted\nduring serialization. This approach may be more reusable when using Wire to\ntarget other languages.","event_type":"push"},{"id":68917257,"repository_id":1236949,"number":"945","state":"finished","result":0,"started_at":"2015-06-30T04:21:44Z","finished_at":"2015-06-30T04:23:20Z","duration":144,"commit":"ce9aba92d501ded4db277853a8cd70ae08574153","branch":"jwilson_0630_trim","message":"Link extensions to options.","event_type":"push"},{"id":68888619,"repository_id":1236949,"number":"944","state":"finished","result":0,"started_at":"2015-06-29T22:29:36Z","finished_at":"2015-06-29T22:30:44Z","duration":115,"commit":"7ede4ad67012c96c80459ad6d1af10af61cc7f5f","branch":"javapoet","message":"Link extensions to options.","event_type":"pull_request"},{"id":68888607,"repository_id":1236949,"number":"943","state":"finished","result":0,"started_at":"2015-06-29T22:28:28Z","finished_at":"2015-06-29T22:29:44Z","duration":119,"commit":"ce9aba92d501ded4db277853a8cd70ae08574153","branch":"jwilson_0629_link","message":"Link extensions to options.","event_type":"push"},{"id":68887667,"repository_id":1236949,"number":"942","state":"finished","result":0,"started_at":"2015-06-29T22:24:10Z","finished_at":"2015-06-29T22:25:32Z","duration":146,"commit":"07a66a4f2b82ad493a58acdc3957dd130953c8b3","branch":"javapoet","message":"Link extensions to options.","event_type":"pull_request"},{"id":68887537,"repository_id":1236949,"number":"941","state":"finished","result":0,"started_at":"2015-06-29T22:20:34Z","finished_at":"2015-06-29T22:22:06Z","duration":157,"commit":"c9428f5f27d5020f040ef5d29a0b152c1c4900a8","branch":"jwilson_0629_link","message":"Link extensions to options.","event_type":"push"},{"id":68887355,"repository_id":1236949,"number":"940","state":"finished","result":0,"started_at":"2015-06-29T22:19:30Z","finished_at":"2015-06-29T22:20:39Z","duration":109,"commit":"f0f423e8039f1f5eaca22a36d16fb0e249ac22a3","branch":"jwilson_0629_link","message":"Merge pull request #220 from square/jwilon_0628_linker\n\nPrepare to switch to JavaPoet.","event_type":"push"},{"id":68855803,"repository_id":1236949,"number":"939","state":"finished","result":0,"started_at":"2015-06-29T18:30:57Z","finished_at":"2015-06-29T18:32:19Z","duration":137,"commit":"f0f423e8039f1f5eaca22a36d16fb0e249ac22a3","branch":"javapoet","message":"Merge pull request #220 from square/jwilon_0628_linker\n\nPrepare to switch to JavaPoet.","event_type":"push"},{"id":68854381,"repository_id":1236949,"number":"938","state":"finished","result":0,"started_at":"2015-06-29T18:19:06Z","finished_at":"2015-06-29T18:20:11Z","duration":119,"commit":"9e436b8aad3171bcd0c4815c04fa42e1a3236cc9","branch":"javapoet","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"pull_request"},{"id":68854317,"repository_id":1236949,"number":"937","state":"finished","result":0,"started_at":"2015-06-29T18:19:06Z","finished_at":"2015-06-29T18:20:20Z","duration":119,"commit":"d83b9b437cc8211a7801d081bd6349d7243921a7","branch":"javapoet","message":"[maven-release-plugin] prepare for next development iteration","event_type":"push"},{"id":68854073,"repository_id":1236949,"number":"936","state":"finished","result":null,"started_at":"2015-06-29T18:16:58Z","finished_at":"2015-06-29T18:17:40Z","duration":6,"commit":"ede3a3971d58d75cf7ae2adf9918b26ba925f4ea","branch":"javapoet","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"push"},{"id":68853990,"repository_id":1236949,"number":"935","state":"finished","result":0,"started_at":"2015-06-29T18:16:58Z","finished_at":"2015-06-29T18:18:07Z","duration":122,"commit":"9096099c652b994448365f8851450a03cc535df0","branch":"master","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"pull_request"},{"id":68853982,"repository_id":1236949,"number":"934","state":"finished","result":0,"started_at":"2015-06-29T18:16:57Z","finished_at":"2015-06-29T18:18:10Z","duration":121,"commit":"ede3a3971d58d75cf7ae2adf9918b26ba925f4ea","branch":"jwilon_0628_linker","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"push"},{"id":68755041,"repository_id":1236949,"number":"933","state":"finished","result":0,"started_at":"2015-06-29T04:11:56Z","finished_at":"2015-06-29T04:13:01Z","duration":112,"commit":"2697eb45aea5a0236f3e21c3d413267b8525c1ba","branch":"master","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"pull_request"},{"id":68755038,"repository_id":1236949,"number":"932","state":"finished","result":0,"started_at":"2015-06-29T04:11:55Z","finished_at":"2015-06-29T04:13:02Z","duration":111,"commit":"3f366181f060bc244679b926d5155ef75d3cfd41","branch":"jwilon_0628_linker","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"push"},{"id":68744663,"repository_id":1236949,"number":"931","state":"finished","result":0,"started_at":"2015-06-29T01:06:08Z","finished_at":"2015-06-29T01:07:17Z","duration":114,"commit":"402be447cf60b6acea49ddde44c2386b2299edb7","branch":"jwilon_0628_linker","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"push"},{"id":68744660,"repository_id":1236949,"number":"930","state":"finished","result":0,"started_at":"2015-06-29T01:06:06Z","finished_at":"2015-06-29T01:07:11Z","duration":102,"commit":"ac7b6c02b5f1deff01aea61500b5150c28fdd449","branch":"master","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"pull_request"},{"id":68744529,"repository_id":1236949,"number":"929","state":"finished","result":null,"started_at":"2015-06-29T01:04:51Z","finished_at":"2015-06-29T01:06:27Z","duration":134,"commit":"86cf7b3ec17c06bba55dcb9ecd8f45b748c00e45","branch":"master","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"pull_request"},{"id":68744451,"repository_id":1236949,"number":"928","state":"finished","result":null,"started_at":"2015-06-29T01:02:55Z","finished_at":"2015-06-29T01:04:22Z","duration":132,"commit":"c31cce3ed3304674d5bb53c86072b5947e4ca635","branch":"jwilon_0628_linker","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"push"},{"id":68744144,"repository_id":1236949,"number":"927","state":"finished","result":null,"started_at":"2015-06-29T00:57:35Z","finished_at":"2015-06-29T00:58:53Z","duration":117,"commit":"12a25ae523451b2edc317957a7552da0eeed8b32","branch":"jwilon_0628_linker","message":"Prepare to switch to JavaPoet.\n\nThe current Wire implementation has to work very hard to overcome\nthe lack of support for imports in JavaWriter. With JavaPoet, we\nwill just link everything together in the first step, and then\nuse fully qualified names when emitting code.\n\nThis adds a new model that adds new places for the linked elements\nto live.","event_type":"push"},{"id":68723291,"repository_id":1236949,"number":"926","state":"finished","result":null,"started_at":"2015-06-28T20:11:56Z","finished_at":"2015-06-28T20:13:12Z","duration":121,"commit":"6e38487a9be371eaccabbf2a4437654274056351","branch":"jwilon_0628_linker","message":"Linker model.\n\nIn attempting to migrate Wire to JavaPoet it becomes pretty clear\nthat Wire today is doing a lot of heroic work to manage Java imports\nand type names.\n\nThis tries to make the code a little less heroic, by doing an eager\nlinking step and models that represent linked versions of the protoparser\npeers. Each WireThing decorates its protoparser equivalent, adding\nknowledge of the Java type it's going to emit.\n\nAn alternative implementation would do linking with the proto names\ninstead. This is worth consideration.","event_type":"push"},{"id":68723028,"repository_id":1236949,"number":"925","state":"finished","result":0,"started_at":"2015-06-28T20:10:14Z","finished_at":"2015-06-28T20:11:41Z","duration":127,"commit":"d83b9b437cc8211a7801d081bd6349d7243921a7","branch":"jwilon_0628_linker","message":"[maven-release-plugin] prepare for next development iteration","event_type":"push"},{"id":68655070,"repository_id":1236949,"number":"924","state":"finished","result":0,"started_at":"2015-06-28T02:16:53Z","finished_at":"2015-06-28T02:20:05Z","duration":197,"commit":"d83b9b437cc8211a7801d081bd6349d7243921a7","branch":"master","message":"[maven-release-plugin] prepare for next development iteration","event_type":"push"},{"id":68655067,"repository_id":1236949,"number":"923","state":"finished","result":0,"started_at":"2015-06-28T02:16:54Z","finished_at":"2015-06-28T02:18:03Z","duration":114,"commit":"39e417b59a745849ea5dae9e7e48afff4943c527","branch":"wire-1.8.0","message":"[maven-release-plugin] prepare release wire-1.8.0","event_type":"push"},{"id":68655064,"repository_id":1236949,"number":"922","state":"finished","result":0,"started_at":"2015-06-28T02:16:40Z","finished_at":"2015-06-28T02:18:22Z","duration":139,"commit":"39e417b59a745849ea5dae9e7e48afff4943c527","branch":"master","message":"[maven-release-plugin] prepare release wire-1.8.0","event_type":"push"}]