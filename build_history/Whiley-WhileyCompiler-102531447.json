[{"id":102531446,"repository_id":4509743,"number":"293","state":"finished","result":1,"started_at":"2016-01-15T06:33:36Z","finished_at":"2016-01-15T06:34:51Z","duration":75,"commit":"22f41c33b30b0ee95ce4b22f8b511612b836829d","branch":"feature/565-returns","message":"Add internal support for multiple returns #565\n\nThis update adds support interally for multiple return values.  This\nincludes support for function/method types with multiple returns, and a\nsignificant amount of the necessary logic.  However, to ensure it\ncompiles, the code does in some places assume only one return can ever\nbe provided.  The next step in this process is to add proper support for\nmultiple return types.","event_type":"push"},{"id":102038781,"repository_id":4509743,"number":"292","state":"finished","result":0,"started_at":"2016-01-13T07:21:54Z","finished_at":"2016-01-13T07:23:20Z","duration":86,"commit":"33b3d1c58b9553f06010f1e3fda5ab49dc848838","branch":"develop","message":"Merge branch 'feature/537-tuples' into develop","event_type":"push"},{"id":102029846,"repository_id":4509743,"number":"291","state":"finished","result":0,"started_at":"2016-01-13T05:58:56Z","finished_at":"2016-01-13T06:00:22Z","duration":86,"commit":"7c46187bee26bb919bc438bc43e6bffcc082c7cf","branch":"feature/537-tuples","message":"Prevent reusing return variable in body #537\n\nThis fixes some outstanding problems related to the removal of tuples.\nIn particular, it prevents duplicate variable names between the return\ntype and the body of the function/method.","event_type":"push"},{"id":102007589,"repository_id":4509743,"number":"290","state":"finished","result":1,"started_at":"2016-01-13T02:47:01Z","finished_at":"2016-01-13T02:48:32Z","duration":91,"commit":"dd9a3e676a527c4c8ec83fb0cb5aa9862e23bb83","branch":"feature/537-tuples","message":"Bug fixes related to removal of tuples #537\n\nThese are a bunch of fixes which get almost all test cases passing,\nfinally.","event_type":"push"},{"id":101745972,"repository_id":4509743,"number":"289","state":"finished","result":1,"started_at":"2016-01-12T03:29:52Z","finished_at":"2016-01-12T03:31:00Z","duration":68,"commit":"2cb395e1ddd7b74b28621f862f596a4903b2a0cf","branch":"feature/537-tuples","message":"Lots of changes ... ugh","event_type":"push"},{"id":101692826,"repository_id":4509743,"number":"288","state":"finished","result":1,"started_at":"2016-01-11T21:43:03Z","finished_at":"2016-01-11T21:44:42Z","duration":99,"commit":"feaf93f352be794a56964f5e0a56ed99d935d46e","branch":"feature/538-vcg","message":"Partial but weak fix related to #538\n\nThis implements are rather ugly hack to get more tests passing for 538.\nRealistically, we need a more serious reworking of the WyIL bytecode to\nfacilitate this.  However, that needs a lot of careful thought.","event_type":"push"},{"id":101481551,"repository_id":4509743,"number":"287","state":"finished","result":0,"started_at":"2016-01-10T23:34:30Z","finished_at":"2016-01-10T23:36:04Z","duration":94,"commit":"eef9675cd1956e240944864746e148e86ce7d660","branch":"bug/561-semtype","message":"Remove redundant cast #561\n\nThis does not resolve the issue, as it reappears later on in\nreturnType().","event_type":"push"},{"id":101481385,"repository_id":4509743,"number":"286","state":"finished","result":1,"started_at":"2016-01-10T23:33:17Z","finished_at":"2016-01-10T23:35:07Z","duration":110,"commit":"32b1d35b7e6b05f9c74f4a0ffb0efebb1f27bc41","branch":"feature/537-tuples","message":"Remove Tuples #537\n\nThis patch removes the notion of a \"tuple\" from Whiley.  This has fairly\nsignificant ramifications for the syntax of the language.  Notably:\n\n1) Removal of tuples types, expressions and associated bytecodes.  In\nparticular, this means there is no longer a notion of a \"tuple LVal\".\nThis means that we lose support for \"destructuring assignments\".\n\n2) Change syntax for multiple returns in functions/methods.  Previously,\nmultiple return values were handled at the Whiley source level using\n\"type patterns\".  Now, instead, functions and methods have an internal\nnotion of \"returns\" instead of a single \"return\", largely similar to the\nway that parameters are represented.  This also means that the way\nregisters are allocated at the WyIL bytecode level is adjusted so that\nparameters take the first n slots, followed by m returns and then local\nvariables, etc.\n\n3) Removal of \"Type Pattern\".  One of the advantages of losing tuples is\nthat we can basically remove the notion of a \"Type Pattern\" altogether.\nHowever, this means that we've temporarily (at least) lost the ability\nto do a rational destructuring assignment.  This needs to be resolved in\none way or another.\n\n4) Return types are now required to be bracketed, and to include names.\nThis was previously something I was considering and now seems like a\ngood idea to drop it in.\n\nThese changes are non-trivial and more thought is required to properly\nintegrate them into the Whiley language.","event_type":"push"},{"id":101480929,"repository_id":4509743,"number":"285","state":"finished","result":1,"started_at":"2016-01-10T23:29:08Z","finished_at":"2016-01-10T23:30:46Z","duration":98,"commit":"33b0a9f708095454d4492c475dbb2029a566c80e","branch":"feature/538-vcg","message":"WyIL: Bug fixes for VCG #538\n\nThe recent changes to the Verification Condition Generator are still\nrather raw, and I've just fixed a slew of bugs.  However, there are\ncertainly still some remaining.","event_type":"push"},{"id":101480725,"repository_id":4509743,"number":"284","state":"finished","result":0,"started_at":"2016-01-10T23:27:09Z","finished_at":"2016-01-10T23:28:36Z","duration":87,"commit":"9b095ab1c660f2518392a923079608be1116eef2","branch":"develop","message":"Update WyRL to v0.4.4\n\nThis updates to the latest version of WyRL, v0.4.4.  The main change in\nthat version is a bug fix related to bipartite matching.","event_type":"push"},{"id":100766998,"repository_id":4509743,"number":"283","state":"finished","result":1,"started_at":"2016-01-07T07:45:40Z","finished_at":"2016-01-07T07:46:50Z","duration":70,"commit":"6318038528e72c4385f62e72393ce7da3ee8f59c","branch":"feature/537-tuples","message":"Remove Tuples #537\n\nThis patch removes the notion of a \"tuple\" from Whiley.  This has fairly\nsignificant ramifications for the syntax of the language.  Notably:\n\n1) Removal of tuples types, expressions and associated bytecodes.  In\nparticular, this means there is no longer a notion of a \"tuple LVal\".\nThis means that we lose support for \"destructuring assignments\".\n\n2) Change syntax for multiple returns in functions/methods.  Previously,\nmultiple return values were handled at the Whiley source level using\n\"type patterns\".  Now, instead, functions and methods have an internal\nnotion of \"returns\" instead of a single \"return\", largely similar to the\nway that parameters are represented.  This also means that the way\nregisters are allocated at the WyIL bytecode level is adjusted so that\nparameters take the first n slots, followed by m returns and then local\nvariables, etc.\n\n3) Removal of \"Type Pattern\".  One of the advantages of losing tuples is\nthat we can basically remove the notion of a \"Type Pattern\" altogether.\nHowever, this means that we've temporarily (at least) lost the ability\nto do a rational destructuring assignment.  This needs to be resolved in\none way or another.\n\n4) Return types are now required to be bracketed, and to include names.\nThis was previously something I was considering and now seems like a\ngood idea to drop it in.\n\nThese changes are non-trivial and more thought is required to properly\nintegrate them into the Whiley language.","event_type":"push"},{"id":100739540,"repository_id":4509743,"number":"282","state":"finished","result":1,"started_at":"2016-01-07T02:51:44Z","finished_at":"2016-01-07T02:53:05Z","duration":81,"commit":"64a853c906f42fc12bb4d9c98d2f8016f1d2f398","branch":"feature/537-tuples","message":"Continued removing tuples #537\n\nHave continued and almost finished removing tuples.  Lots of problems\narose, including:\n\n1) Have temporarily removed ability to handle multiple assignments\n\n2) Have had to think about ordering of parameter and return registers in\nWyIL.  This puts parameters first and then returns.\n\n3) Have updated parser to disambiguiate assignments, variable\ndeclarations and function invocations.\n\nThese changes will undoubtedly cause a lot of problems.","event_type":"push"},{"id":100697326,"repository_id":4509743,"number":"281","state":"finished","result":1,"started_at":"2016-01-06T22:18:14Z","finished_at":"2016-01-06T22:19:23Z","duration":69,"commit":"189b04c5c7101e286ea158e3baf5fdb8a1bac3b8","branch":"feature/537-tuples","message":"Fix lots of problems after removing tuples #537\n\nThis fixes a lot of obvious problems related the handling of tuples, and\npartially fixes the parser.  It looks likely that I will also require\nreturn types to be bracketed, and to include names.","event_type":"push"},{"id":100665071,"repository_id":4509743,"number":"280","state":"finished","result":1,"started_at":"2016-01-06T19:59:51Z","finished_at":"2016-01-06T20:01:42Z","duration":111,"commit":"cd174557ec8e6128db33c4efcc04ef10ed940d58","branch":"feature/537-tuples","message":"Progress removing tuples #537\n\nHave done a large amount of the leg-work to remove tuples.  This\nincludes removing the type from wyc, wyil and wyjc along with all\ncorresponding bytecodes and code generation, etc.  What remains is to\ndecide how to deal with the lack of type patterns.","event_type":"push"},{"id":100501749,"repository_id":4509743,"number":"279","state":"finished","result":0,"started_at":"2016-01-06T02:52:21Z","finished_at":"2016-01-06T02:53:48Z","duration":87,"commit":"9131898ae43d21fcf46ebb540b348775c318151c","branch":"develop","message":"Merge pull request #560 from utting/develop\n\nUpdated building from source instructions to have some more detail","event_type":"push"},{"id":100501658,"repository_id":4509743,"number":"278","state":"finished","result":1,"started_at":"2016-01-06T02:50:54Z","finished_at":"2016-01-06T02:52:01Z","duration":67,"commit":"695e47eb6fbff2d43e5a41ea44b3af479cfdbc56","branch":"feature/537-tuples","message":"Progress removing tuples #537\n\nHave done a large amount of the leg-work to remove tuples.  This\nincludes removing the type from wyc, wyil and wyjc along with all\ncorresponding bytecodes and code generation, etc.  What remains is to\ndecide how to deal with the lack of type patterns.","event_type":"push"},{"id":100495975,"repository_id":4509743,"number":"277","state":"finished","result":0,"started_at":"2016-01-06T01:55:28Z","finished_at":"2016-01-06T01:56:56Z","duration":88,"commit":"023d0545d68f7f6af4a734ad4e7de4e602cfaef2","branch":"bug/561-semtype","message":"Remove redundant cast #561\n\nThis does not resolve the issue, as it reappears later on in\nreturnType().","event_type":"push"},{"id":100262033,"repository_id":4509743,"number":"276","state":"finished","result":0,"started_at":"2016-01-05T02:14:20Z","finished_at":"2016-01-05T02:15:47Z","duration":87,"commit":"03cf11dc10a278c9971e07634ce3e304d0754eed","branch":"develop","message":"Updated building from source instructions to have some more detail, and mention Ant library.","event_type":"pull_request"},{"id":100226165,"repository_id":4509743,"number":"275","state":"finished","result":0,"started_at":"2016-01-04T22:24:15Z","finished_at":"2016-01-04T22:25:53Z","duration":98,"commit":"212cc5866339e2971683c4fbc1c1d788fe4d32e0","branch":"master","message":"Merge pull request #556 from utting/patch-1\n\nUpdate CONTRIBUTING.md","event_type":"push"},{"id":100225664,"repository_id":4509743,"number":"274","state":"finished","result":0,"started_at":"2016-01-04T22:22:43Z","finished_at":"2016-01-04T22:24:16Z","duration":93,"commit":"44a920464727f36a7b06b9b6baf27561dab3e512","branch":"develop","message":"Merge branch 'feature/558-README' into develop","event_type":"push"},{"id":100063621,"repository_id":4509743,"number":"273","state":"finished","result":0,"started_at":"2016-01-04T08:06:38Z","finished_at":"2016-01-04T08:08:30Z","duration":112,"commit":"91d2529649cc626db65b913e6965372d1a5a0b44","branch":"master","message":"Update CONTRIBUTING.md","event_type":"pull_request"},{"id":99523187,"repository_id":4509743,"number":"272","state":"finished","result":1,"started_at":"2015-12-30T23:34:43Z","finished_at":"2015-12-30T23:36:04Z","duration":81,"commit":"91106b6aee3a00e3e7f8165944811c12eef94391","branch":"feature/538-vcg","message":"WyIL: Bug fixes for VCG #538\n\nThe recent changes to the Verification Condition Generator are still\nrather raw, and I've just fixed a slew of bugs.  However, there are\ncertainly still some remaining.","event_type":"push"},{"id":99522861,"repository_id":4509743,"number":"271","state":"finished","result":0,"started_at":"2015-12-30T23:32:00Z","finished_at":"2015-12-30T23:33:59Z","duration":119,"commit":"4d58393515c67357bd455c94fa7a6aa57fba8bf8","branch":"develop","message":"Merge branch 'bug/552-wytype' into develop","event_type":"push"},{"id":99522435,"repository_id":4509743,"number":"270","state":"finished","result":0,"started_at":"2015-12-30T23:28:36Z","finished_at":"2015-12-30T23:30:48Z","duration":132,"commit":"c65da38fd528c5735c4089b61d929ae2a579cafd","branch":"bug/552-wytype","message":"Add test case for #555\n\nThis test case illustrates the main issue outlined in issue 555.\nHowever, it is also perhaps illustrating another bug related to unions\nof function references.  This needs further investigation.","event_type":"push"},{"id":99507585,"repository_id":4509743,"number":"269","state":"finished","result":0,"started_at":"2015-12-30T21:44:56Z","finished_at":"2015-12-30T21:46:30Z","duration":94,"commit":"14ed53e76133ee3f29ffed9fc57671f43ac0758a","branch":"bug/552-wytype","message":"Partial fix for #552\n\nThis implements WyType.Function and WyType.Method for representing\nfunction and method types (respectively) at runtime on the JVM.  This\nresolves #552, though it's not clear to me whether runtime type testing\nof these new types works at all.","event_type":"push"}]